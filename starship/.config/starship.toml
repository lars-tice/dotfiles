# Starship Configuration

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Prompt format
format = """
[╭─](bold white)$username$hostname$directory$git_branch$git_status$nodejs$python$rust$golang$docker_context$package
[╰─](bold white)$character """

# Right prompt
right_format = """$cmd_duration$time"""

# Timeout for commands
command_timeout = 1000

# Character module - shows prompt symbol
[character]
success_symbol = '[➜](bold green)'
error_symbol = '[➜](bold red)'
vimcmd_symbol = '[➜](bold yellow)'

# Username module
[username]
style_user = 'bold blue'
style_root = 'bold red'
format = '[$user]($style) '
disabled = false
show_always = true

# Hostname module
[hostname]
ssh_only = false
format = '[@$hostname](bold yellow) '
disabled = false

# Directory module
[directory]
style = 'bold cyan'
format = 'in [$path]($style)[$read_only]($read_only_style) '
truncation_length = 3
truncate_to_repo = true
truncation_symbol = '…/'

# Git branch module
[git_branch]
symbol = ' '
style = 'bold purple'
format = 'on [$symbol$branch(:$remote_branch)]($style) '

# Git status module
[git_status]
style = 'bold red'
format = '([$all_status$ahead_behind]($style) )'
conflicted = '🏳'
up_to_date = ''
untracked = '🤷'
ahead = '⇡${count}'
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
behind = '⇣${count}'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](green)'
renamed = '👅'
deleted = '🗑'

# Command duration module
[cmd_duration]
min_time = 2_000
format = '[took $duration](bold yellow) '
show_milliseconds = false

# Time module
[time]
disabled = false
format = '[$time]($style) '
style = 'bold white'
use_12hr = false

# Package version module
[package]
symbol = '📦 '
style = 'bold 208'
format = 'is [$symbol$version]($style) '
display_private = false

# Node.js module
[nodejs]
symbol = ' '
style = 'bold green'
format = 'via [$symbol($version )]($style)'
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ['package.json', '.node-version', '.nvmrc']
detect_folders = ['node_modules']

# Python module
[python]
symbol = '🐍 '
style = 'yellow bold'
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
python_binary = ['python3', 'python']

# Rust module
[rust]
symbol = '🦀 '
style = 'bold red'
format = 'via [$symbol($version )]($style)'

# Go module
[golang]
symbol = '🐹 '
style = 'bold cyan'
format = 'via [$symbol($version )]($style)'

# Docker context
[docker_context]
symbol = '🐳 '
style = 'bold blue'
format = 'via [$symbol$context]($style) '
only_with_files = true
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']

# AWS module (disabled by default)
[aws]
disabled = true
symbol = '☁️ '
style = 'bold orange'
format = 'on [$symbol($profile )(\($region\) )]($style)'

# Kubernetes context (disabled by default)
[kubernetes]
disabled = true
symbol = '☸ '
style = 'bold blue'
format = 'on [$symbol$context( \($namespace\))]($style) '